[{"title":"网站分享","date":"2020-01-16T08:17:35.000Z","date_formatted":{"ll":"Jan 16, 2020","L":"01/16/2020","MM-DD":"01-16"},"updated":"2020-01-17T07:16:05.664Z","content":"和大家分享一些平时会用到的功能网站，以及一些好的博客\n创造狮创造狮(http://chuangzaoshi.com/) 这是一个比较全面的网站，里面收集整理了很多网站资源，包括设计、前端、产品、运营这四个职位经常用到的网站。\n简单好用的平面设计软件canva(https://www.canva.cn/)在这个网站上做过海报，有很多好看的模板，制作起来很简单，效果佳，比自己设计的好看太多，还不用ps一顿操作。强推！！!\n图片压缩网站TinyPNG(https://tinypng.com/) —一个压缩PNG的神站\n如何把网页中要用到的图片压缩到最小，这是我们经常会考虑的一个问题。\n只需要将要压缩的图片拖拽到网页中间的大框框内，就可以把你要压缩的PNG格式图片压缩到小很多又基本上不会影响图片的质量，一般的图片都可以压缩到50%以上。\n文件转换器云转换(https://cloudconvert.com/) 支持的文件转换的格式多达200多种，可以利用云服务把用户的文件格式快速地转换成相应的其他格式，在chrome中安装了CloudConvert插件以后，用户还可以从谷歌云硬盘中直接使用CloudConvert插件进行转换格式化后，进行下载或继续保存到云服务中。CloudConvert插件支持的转换格式有：\n✓音频（MP3、AAC、FLAC……）✓视频（MP4，AVI，MPG……）✓文件（PDF，DOC，DOCX，ODT……）✓手机电子书（epbub，CBC，……）✓压缩文件（ZIP，RAR，7z文件………………）✓图片（PNG，JPG格式，SVG图像……）✓电子表格（XLS，XLSX✓CSV，ODS，……）✓演示文稿（PPT，pptx ODP，……）\n高清图片网站https://www.wallpapermaiden.com/ 国外的一个壁纸网站,虽然访问速度有一些慢,不过还是比较值得等待的,这个网站里面很多高质量的壁纸。更多可参考知乎相关问答(https://www.zhihu.com/question/32762402/answer/874665193)\n","thumbnail":"2020/01/16/sourceShare/sourceShare.jpeg","color":"#111","plink":"http://yoursite.com/2020/01/16/sourceShare/"},{"title":"Vue渐进式JavaScript框架NOTE（一）","date":"2019-12-20T09:56:45.941Z","date_formatted":{"ll":"Dec 20, 2019","L":"12/20/2019","MM-DD":"12-20"},"updated":"2020-01-17T07:37:25.377Z","content":"Welcome to my blog! This is my first post.渐进式即有一个核心库，在需要的时候再逐渐添加插件的一种概念。Vue.js 是一种轻量级前端MVVM框架同时吸收了React（组件化）和Angular（灵活指令页面操作）的优点。是一套构建用户界面的渐进式框架，Vue 采用自底向上增量开发的设计。官方中文文档\n基础知识Vue的扩展插件\nvue-cli:vue脚手架，帮我们下载基于vue的、编写好配置的、设定好依赖的项目\nvue-resource(axios):ajax请求\nvue-router:路由\nvuex:状态管理\nvue-lazyload:图片懒加载\nvue-scroller：页面滑动相关\nmint-ui：基于vue的UI组件库（移动端）\nelement-ui：基于vue的UI组件库（PC端）\n\n与React、AngularJs框架的对比Vue是一个”MVVM框架（库）”,与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。\nmvvm中m是数据，v是页面，vm是组件。与我们所熟悉的mvc不同，mvvm是在mvc基础上，把每块的功能拆分开，更容易维护和使用，真正将页面与数据逻辑分离的模式，在开发模式上，它是真正将前台代码开发者与后台代码开发者分离的模式。\nVue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或已有项目结合。Vue的目标是通过尽可能简单的API实现“响应的数据绑定”和组合的视图组件。\n\nVue与Angular的区别\n\n\nvue简单小巧，运行速度都比angular快;\nvue的指令是v-xxx；angular的指令是ng-xxx；\nvue的数据放在data这个对象中，angular数据绑定在$scrope上；\nvue有组件化概念，angular没有。\n\n\nVue与React的区别\n\n\n都是用虚拟DOM;\n都提供了响应式和组件化的视图组件；\n注意力都集中保持在核心库；\n都有配套的路由和负责处理全局状态管理的库；\nReact使用JSX渲染页面，vue使用简单的模板；\nvue运行的速度更快。\n\nvue实例的生命周期Vue官网的生命周期图片：\n\n创建前（beforeCreate）对应的钩子函数为beforeCreate。此阶段为实例初始化之后，此时的数据观察和事件机制都未形成，不能获得DOM节点。\n\n创建后（created）对应的钩子函数为created。在这个阶段vue实例已经创建，仍然不能获取DOM元素。\n\n载入前（beforeMount）对应的钩子函数是beforemount，在这一阶段，我们虽然依然得不到具体的DOM元素，但vue挂载的根节点已经创建，下面vue对DOM的操作将围绕这个根元素继续进行；beforeMount这个阶段是过渡性的，一般一个项目只能用到一两次。\n\n载入后（mounted）对应的钩子函数是mounted。mounted是平时我们使用最多的函数了，一般我们的异步请求都写在这里。在这个阶段，数据和DOM都已被渲染出来。\n\n更新前（beforeUpdate）对应的钩子函数是beforeUpdate。在这一阶段，vue遵循数据驱动DOM的原则；beforeUpdate函数在数据更新后虽然没立即更新数据，但是DOM中的数据会改变，这是Vue双向数据绑定的作用。\n\n更新后（updated）对应的钩子函数是updated。在这一阶段DOM会和更改过的内容同步。\n\n销毁前（beforeDestroy）对应的钩子函数是beforeDestroy。在上一阶段vue已经成功的通过数据驱动DOM更新，当我们不在需要vue操纵DOM时，就需要销毁Vue，也就是清除vue实例与DOM的关联，调用destroy方法可以销毁当前组件。在销毁前，会触发beforeDestroy钩子函数。\n\n销毁后（destroyed）对应的钩子函数是destroyed。在销毁后，会触发destroyed钩子函数。\n\n\n效果示例代码：\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;\t&lt;meta charset=\"utf-8\"&gt;\t&lt;title&gt;vueTest&lt;/title&gt;\t&lt;script src=\"js/vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;\t&lt;div id=\"app\"&gt;\t\t&lt;h1&gt;\t\t\t&#123;&#123;message + '这是在outer HTML中的'&#125;&#125;\t\t&lt;/h1&gt;\t&lt;/div&gt;\t&lt;script&gt;\t\tvar app = new Vue(&#123;\t\t\tel: '#app',\t\t\t//template:\"&lt;h1&gt;&#123;&#123;message+'这是在template中的'&#125;&#125;&lt;/h1&gt;\",\t\t\tdata: &#123;\t\t\t\tmessage: 'vue的生命周期'\t\t\t&#125;,\t\t\tbeforeCreate: function()&#123;\t\t\t\tconsole.group('beforeCreate实例创建前状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tcreated: function()&#123;\t\t\t\tconsole.group('created实例创建完毕状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tbeforeMount: function()&#123;\t\t\t\tconsole.group('beforeMount挂载前状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tmounted: function()&#123;\t\t\t\tconsole.group('mounted挂载完毕状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tbeforeUpdate: function()&#123;\t\t\t\tconsole.group('beforeUpdate更新前状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el.innerHTML);\t\t\t\tconsole.log(this.$el);\t\t\t\tconsole.log(document.getElementById('app').innerHTML);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+JSON.stringify(this.$data));\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tupdated: function()&#123;\t\t\t\tconsole.group('updated更新完毕状态');\t\t\t\t// console.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\t// console.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el.innerHTML);\t\t\t\tconsole.log(this.$el);\t\t\t\tconsole.log(document.getElementById('app').innerHTML);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+JSON.stringify(this.$data));\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tbeforeDestroy: function()&#123;\t\t\t\tconsole.group('beforeDestroy销毁前状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;,\t\t\tdestroyed: function()&#123;\t\t\t\tconsole.group('destroyed销毁完毕状态');\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"el:\"+this.$el);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"data:\"+this.$data);\t\t\t\tconsole.log(\"%c%s\",\"color:red\",\"message:\"+this.message);\t\t\t&#125;\t\t&#125;);\t\t//手动挂载\t\t//app.$mount(\"#app\");\t\t//销毁实例\t\t//app.$destroy();\t&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\n","plink":"http://yoursite.com/2019/12/20/vueNote1/"},{"title":"About Nicole","date":"2020-01-20T12:46:25.000Z","date_formatted":{"ll":"Jan 20, 2020","L":"01/20/2020","MM-DD":"01-20"},"updated":"2020-01-17T06:33:09.938Z","content":"\n95后；女程序员；就职于腐都；朝十晚六，爽歪歪；主Java研发，会点lua、c、c++，前端是活学活用，工作用的最多是vue\n其他PS、基本办公软件也挺擅长的，都是活学活用，哪里需要哪里搬\n做事有章程，具有独立分析、解决问题的能力，良好的沟通能力，团队合作精神，高度的责任心，能承担工作压力。\n生活中是个积极乐观的人，目前为止我都很幸福，家人朋友男朋友都对我很好，对未来有无限憧憬；\n爱好很肤浅，吃喝玩乐都能使我快乐，小说+音乐是我的“灵魂伴侣”。目前喜欢的作者有半截白菜、丁墨、苏他，但我非专一，这完全取决于我最近看的文类型。音乐是好听就行，不限语言，不限歌手，但若以对歌的长情程度来决定是否喜欢某个歌手的话，周杰伦必须在我喜欢的类别里。\n喜欢看电影，经常会被电影的某个情节戳中泪点，自认为是比较能get到导演想法的人。我想我的多愁善感全用在这上面了，因为生活中并不是个爱哭的人。\n友情链接；胡二摩斯(https://me.csdn.net/qq_35643562) : 温暖的老油条松林羊(http://blog.andus.top/) : 靠谱的直男\n","thumbnail":"about.jpeg","plink":"http://yoursite.com/about/"}]